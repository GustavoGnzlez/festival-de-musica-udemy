{"version":3,"sources":["app.js"],"names":["iniciarApp","navegacionFija","crearGaleria","scrollNav","document","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","seccionScroll","target","attributes","href","value","querySelector","scrollIntoView","behavior","galeria","i","imagen","createElement","innerHTML","onclick","mostrarImagen","appendChild","id","overlay","classList","add","remove","cerrarModal","textContent","body","header","this","scrollY","window","linkActive","activeLink","l","sections","navHighlighter","pageYOffset","current","sectionHeight","offsetHeight","sectionTop","offsetTop","sectionId","getAttribute"],"mappings":"AAKA,SAASA,aACLC,iBACAC,eACAC,YAkBJ,SAASA,YAEWC,SAASC,iBAAiB,iBAElCC,QAAQC,IAEbA,EAAOC,iBAAiB,SAAS,SAASC,GAEzCA,EAAEC,iBAEF,MAAMC,EAAgBF,EAAEG,OAAOC,WAAWC,KAAKC,MAE/BX,SAASY,cAAcL,GAE/BM,eAAe,CAAEC,SAAU,gBAK3C,SAAShB,eACL,MAAMiB,EAAUf,SAASY,cAAc,sBAGxC,IAAI,IAAII,EAAI,EAAGA,GAAI,GAAIA,IAAK,CAG3B,MAAMC,EAASjB,SAASkB,cAAc,WACtCD,EAAOE,UAAY,yCACeH,mEACAA,qGACkCA,+BAGpEC,EAAOG,QAAU,WACbC,cAAcL,IAIlBD,EAAQO,YAAYL,IAKxB,SAASI,cAAcE,GAGnB,MAAMN,EAASjB,SAASkB,cAAc,WACtCD,EAAOE,UAAY,0CACgBI,oEACAA,sGACkCA,+BAGrE,MAAMC,EAAUxB,SAASkB,cAAc,OAEvCM,EAAQF,YAAYL,GAEpBO,EAAQC,UAAUC,IAAI,WAEtBF,EAAQJ,QAAU,WACDpB,SAASY,cAAc,QAE/Ba,UAAUE,OAAO,cAEtBH,EAAQG,UAIZ,MAAMC,EAAc5B,SAASkB,cAAc,KAC3CU,EAAYC,YAAc,IAC1BD,EAAYH,UAAUC,IAAI,cAC1BE,EAAYR,QAAU,WACLpB,SAASY,cAAc,QAE/Ba,UAAUE,OAAO,cAEtBH,EAAQG,UAEZH,EAAQF,YAAYM,GAGpB,MAAME,EAAO9B,SAASY,cAAc,QACpCkB,EAAKR,YAAYE,GAEjBM,EAAKL,UAAUC,IAAI,cAIvB,SAAS7B,iBACL,MAAMkC,EAAS/B,SAASY,cAAc,WAElCoB,KAAKC,SAAW,GAAIF,EAAON,UAAUC,IAAI,QACxCK,EAAON,UAAUE,OAAO,QAtHjC3B,SAASI,iBAAiB,oBAAoB,WAC1CR,gBAwHFsC,OAAO9B,iBAAiB,SAAUP,gBAMpC,MAAMsC,WAAanC,SAASC,iBAAiB,cAE7C,SAASmC,aACPD,WAAWjC,QAASmC,GAAMA,EAAEZ,UAAUE,OAAO,gBAC7CK,KAAKP,UAAUC,IAAI,eAGrBS,WAAWjC,QAASmC,GAAMA,EAAEjC,iBAAiB,QAASgC,aAMtD,MAAME,SAAWtC,SAASC,iBAAiB,eAM3C,SAASsC,iBAEL,IAAIN,EAAUC,OAAOM,YAErBF,SAASpC,QAAQuC,IACb,MAAMC,EAAgBD,EAAQE,aACxBC,EAAaH,EAAQI,UAAY,GACvCC,EAAYL,EAAQM,aAAa,MAK9Bd,EAAUW,GAAcX,GAAWW,EAAaF,EAE/C1C,SAASY,cAAc,uBAAyBkC,EAAY,KAAKrB,UAAUC,IAAI,eAI/E1B,SAASY,cAAc,uBAAyBkC,EAAY,KAAKrB,UAAUE,OAAO,iBApB9FO,OAAO9B,iBAAiB,SAAUmC","file":"app.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n})\r\n\r\n//En esta función incluiremos las dem´sa tareas que creemos para así tenerlas y aligerar la carga de tareas\r\nfunction iniciarApp() {\r\n    navegacionFija();\r\n    crearGaleria();\r\n    scrollNav();\r\n}\r\n\r\n// function navegacionFija(){\r\n//     const header = document.querySelector('.header')\r\n//     const video = document.querySelector('.video');\r\n\r\n//     window.addEventListener('scroll', function() {\r\n//         if(video.getBoundingClientRect().top < 0) {\r\n//             header.classList.add('fijo');\r\n\r\n//         }else {\r\n//             header.classList.remove('fijo');\r\n//         };\r\n//     })\r\n// }\r\n\r\n//Crear el scroll smooth\r\nfunction scrollNav() {\r\n    //Se toman los datos de el nav y los enlances \"a\"\r\n    const enlaces = document.querySelectorAll('.navegacion a');\r\n    //Iteramos en cada uno de ellos\r\n    enlaces.forEach(enlace => {\r\n        //Agregamos una función de escucha de click\r\n       enlace.addEventListener('click', function(e) {\r\n        //Evitamos que se ejecute en los valores predeterminados\r\n        e.preventDefault();\r\n        //Creamos una variable con los atributos que extraeremos del evento click\r\n        const seccionScroll = e.target.attributes.href.value;\r\n        //Pasamos a otra variable los atributos extraidos anteriormente\r\n        const seccion = document.querySelector(seccionScroll);\r\n        //Creamos y aplicamos la nueva configuración del scroll\r\n        seccion.scrollIntoView({ behavior: \"smooth\"});\r\n       }); \r\n    });\r\n}\r\n\r\nfunction crearGaleria() {\r\n    const galeria = document.querySelector('.galeria__imagenes');\r\n\r\n    //Iterar en los elementos consecutivos en el orden\r\n   for(let i = 1; i <=12; i++) {\r\n\r\n    //Creamos y cargamos las imagenes pequeñas\r\n    const imagen = document.createElement('picture');\r\n    imagen.innerHTML = `\r\n    <source srcset=\"build/img/thumb/${i}.avif\" type=\"image/avif\">\r\n    <source srcset=\"build/img/thumb/${i}.webp\" type=\"image/webp\">\r\n    <img loading=\"lazy\" width=\"200\" height=\"300\" src=\"build/img/thumb/${i}.jpg\" alt=\"Imagen galería\">`;\r\n\r\n    //Detectar cuando se le da click a una imagen\r\n    imagen.onclick = function() {\r\n        mostrarImagen(i);\r\n    }\r\n    \r\n    //Mostramos las imagenes en el HTML\r\n    galeria.appendChild(imagen);\r\n   }\r\n}\r\n\r\n//Mostras las imágenes grandes\r\nfunction mostrarImagen(id){\r\n\r\n    //Creamos la estructura HTML con el tag <picture>\r\n    const imagen = document.createElement('picture');\r\n    imagen.innerHTML = `\r\n    <source srcset=\"build/img/grande/${id}.avif\" type=\"image/avif\">\r\n    <source srcset=\"build/img/grande/${id}.webp\" type=\"image/webp\">\r\n    <img loading=\"lazy\" width=\"200\" height=\"300\" src=\"build/img/grande/${id}.jpg\" alt=\"Imagen galería\">`;\r\n\r\n    //Creamos un overlay que se guardará en un <div>\r\n    const overlay = document.createElement('DIV');\r\n    //Agregamos el overlay a la imagen\r\n    overlay.appendChild(imagen);\r\n    //Creamos y agregamos la clase .overlay\r\n    overlay.classList.add('overlay');\r\n    //Cerrar las imagenes dando click en cualquier espaccio de la pantalla\r\n    overlay.onclick = function() {\r\n        const body = document.querySelector('body');\r\n        //Remover clase fijar scroll del body\r\n        body.classList.remove('fijar-body');\r\n        //Remover el overlay al cerrar la imagen\r\n        overlay.remove();\r\n    }\r\n\r\n    //boton para el modal\r\n    const cerrarModal = document.createElement('P');\r\n    cerrarModal.textContent = 'X';\r\n    cerrarModal.classList.add('btn-cerrar');\r\n    cerrarModal.onclick = function() {\r\n        const body = document.querySelector('body');\r\n        //Remover clase fijar scroll del body\r\n        body.classList.remove('fijar-body');\r\n        //Remover el overlay al cerrar la imagen\r\n        overlay.remove();\r\n    }\r\n    overlay.appendChild(cerrarModal);\r\n\r\n    //Mostramos las imagenes al dar click en el <body>\r\n    const body = document.querySelector('body');\r\n    body.appendChild(overlay);\r\n    //Agregar clase para fijar el scroll en el body\r\n    body.classList.add('fijar-body');\r\n}\r\n\r\n/*==================== Cambiar el background HEADER ====================*/\r\nfunction navegacionFija() {\r\n    const header = document.querySelector(\".header\");\r\n    // Cuando el desplazamiento es mayor que 80 del viewport, agregua el scroll-header a la etiqueta header\r\n    if (this.scrollY >= 80) header.classList.add(\"fijo\");\r\n    else header.classList.remove(\"fijo\");\r\n  }\r\n  \r\n  window.addEventListener(\"scroll\", navegacionFija);\r\n\r\n\r\n\r\n\r\n//*===== Link Active Work. Aplica la clase active-link cuando damos click a algún enlace de la navegación, de lo contrario lo elimina =====*/\r\nconst linkActive = document.querySelectorAll(\".nav__link\");\r\n\r\nfunction activeLink() {\r\n  linkActive.forEach((l) => l.classList.remove(\"active-link\"));\r\n  this.classList.add(\"active-link\");\r\n}\r\n\r\nlinkActive.forEach((l) => l.addEventListener(\"click\", activeLink));\r\n\r\n\r\n//*===== Escucha el escroll para aplicar el active-link a cada sección por la que pase y tenga un id =====*/\r\n// Obtener todas las secciones que tienen una ID definida\r\n\r\nconst sections = document.querySelectorAll(\"section[id]\");\r\n\r\n// Agregue un detector de eventos escuchando el desplazamiento\r\n\r\nwindow.addEventListener(\"scroll\", navHighlighter);\r\n\r\nfunction navHighlighter() {\r\n    // Obtener la posición del scroll actual en pantalla\r\n    let scrollY = window.pageYOffset;\r\n    // Ahora recorremos las secciones para obtener los valores de altura, top e ID de cada una\r\n    sections.forEach(current => {\r\n        const sectionHeight = current.offsetHeight;\r\n        const sectionTop = current.offsetTop - 50,\r\n        sectionId = current.getAttribute(\"id\");\r\n\r\n        // Si nuestra posición de desplazamiento actual ingresa al espacio donde está la sección actual en la pantalla, agregue la clase .active al enlace de navegación correspondiente, de lo contrario, elimínelo\r\n        // - Para saber qué enlace necesita una clase activa, usamos la variable sectionId que obtenemos mientras recorremos las secciones como un selector\r\n\r\n        if(scrollY > sectionTop && scrollY <= sectionTop + sectionHeight)\r\n        {\r\n            document.querySelector('.navegacion a[href*=' + sectionId + ']').classList.add(\"active-link\")\r\n        }\r\n        else \r\n        {\r\n            document.querySelector('.navegacion a[href*=' + sectionId + ']').classList.remove(\"active-link\")\r\n        }\r\n\r\n    })\r\n}"]}